<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://ac3lab.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://ac3lab.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-02-23T11:23:58+00:00</updated><id>https://ac3lab.github.io/feed.xml</id><title type="html">blank</title><subtitle>Marrying academic rigor with practical applications to benefit sports </subtitle><entry><title type="html">Complex Networks on football</title><link href="https://ac3lab.github.io/blog/2024/post_complex_network_football/" rel="alternate" type="text/html" title="Complex Networks on football"/><published>2024-02-21T08:00:00+00:00</published><updated>2024-02-21T08:00:00+00:00</updated><id>https://ac3lab.github.io/blog/2024/post_complex_network_football</id><content type="html" xml:base="https://ac3lab.github.io/blog/2024/post_complex_network_football/"><![CDATA[<figure> <picture> <img src="/assets/img/Posts_Images/2024-02-21-post_complex_network_football-Images/data-analysis-pass-network.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p align="justify"> Complex networks, or science networks, is a concept in computer science that study objects and their interactions. The objects are usually called nodes, and the interactions are edges. The area has been used to investigate various subjects, such as social networks, biological networks, and transportation networks. This post will show how to use this area to analyze football matches. </p> <p align="justify"> The first thing we need to do is to define what we want to analyze in the football match. The most common analysis is to study the pass network. The passes network is a network where the nodes are the players, and the edges are the passes between the players. This network can be used to analyze the team's strategy, the players' performance, and the team's performance. The network can be studied using several metrics, such as degree, clustering coefficient, centrality, and betweenness. Besides the passes network, we can also analyze the distance network between the players. Here, we will focus on the passes network. </p> <p align="justify"> This post will focus on the theoretical aspects of Complex Networks and how to use it to analyze football matches. We will not show the code to analyze the matches. In a future post, we will demonstrate step-by-step how to analyze a football match using Complex Networks. </p> <h2 id="the-data">The Data</h2> <p align="justify"> To model your network, you must have an event dataset from the match. The event dataset is a dataset that contains all the events that occurred during the match, such as passes, shots, and fouls. Some sources for this type of dataset are StatsBomb, Wyscout, and Opta. Statsbomb provides these datasets for free in their <a href="https://github.com/statsbomb/open-data" target="_blank">github repository</a>. </p> <h2 id="modeling-the-network">Modeling the network</h2> <p align="justify"> To model a pass network, you must follow some steps: <ol> <li>Select the team that you want to analyze</li> <li>Filter to get only the passes</li> <li>They must have an outcome of success</li> <li>You can remove connections with less than a certain number of passes (optional)</li> <li>You can remove passes from set-pieces (optional)</li> </ol> The two last steps are optional because you may want to analyze the set pieces separately, and you may wish to filter meaningless passes. After this filtering, you must aggregate the data by the player that made the pass and the player that received the pass. This will give you the information necessary to prepare your network. </p> <p align="justify"> One observation is that your network must be directional. This means that the edges must have a direction, indicating the direction of the pass. This is important because the direction of the pass can give you information about the team's strategy. </p> <p align="justify"> After you have the data for your network, you can use a package like NetworkX to model your network. NetworkX is a Python package for the creation, manipulation, and study of the structure, dynamics, and functions of complex networks. The package provides tools to create and analyze the network. </p> <h2 id="analyzing-the-network">Analyzing the network</h2> <p align="justify"> With these steps done, you can start the analysis of your network. After that, one thing you can do is plot the network to observe how the objects (players) are connected. After that, you can use some metrics to understand some concepts of the match and team you are analyzing. The metrics we will describe here are: <ol> <li>Degree</li> <li>Clustering Coefficient</li> <li>Centrality</li> <ul> <li>Closeness</li> <li>Betweenness</li> </ul> <li>Hubs</li> <li>Authorities</li> <li>Pagerank</li> </ol> </p> <p align="justify"> So, let's go! </p> <h2 id="metrics">Metrics</h2> <p align="justify"> Before everything, it is essential to realize that when analyzing a game, you must bring some subjectives of the team to have a complete understanding of the match. The metrics can give you some insights, but the final analysis must consider how the team plays, the players' characteristics, and the match context. </p> <p align="justify"> Having a high or low value in a metric can mean different things depending on the team's strategy and the players' behaviour. You should explore the differences between the players, compare with the players' positions, and compare with the team's performance. Remember, it is a network, everything is connected. <h4>Degree</h4> <p align="justify"> The degree of a node is the number of edges connected to it (the number of passes). The degree can inform you how much that player was involved in the match. A player with a high degree can be considered a key player in the match. A player with a low degree can be viewed as a player who was not involved in the team's plays (can also be a strategy). Nowadays, we can consider the player who pivots the game as a key player with this metric, usually the midfielder. Kevin De Bruyne, for example, is a player with a high degree in the matches. </p> <p align="justify"> Degrees can be in and out. The in-degree is the number of passes received by the player, and the out-degree is the number of passes made by the player. <p align="justify"> In summary, the degree can inform you about the players' involvement in the match. </p> <h4>Clustering Coefficient</h4> <p align="justify"> The Clustering Coefficient is an interesting one. When playing football, you learn the importance of creating triangles between the players, appearing in the game, receiving the ball, and having options to pass. </p> <p align="justify"> It will give this information to you. It measures the degree to which nodes in a graph tend to cluster together. In the context of football, it can provide you with information about how the team is creating triangles and options to pass. </p> <p align="justify"> Briefly, the Clustering Coefficient can give you an understanding of how the team creates options to pass and triangulates the plays. </p> <h4>Closeness Centrality</h4> <p align="justify"> The Closeness Centrality measures the average shortest distance path between every player on the network. Regarding a pass network it can give you information about how the player is close to the other players in terms of passes. In other words, a player with a higher closeness centrality is a player that is more connected to the other players in the network. </p> <p align="justify"> An example can be a midfielder who constructs the plays and tends to have a higher closeness centrality. Another one is a center-forward can have a lower closeness centrality because he tends to be more isolated from the other players. We can say that Jorginho in Italy's national team has a high closeness centrality, he is always very near of every play. </p> <p align="justify"> In a nutshell, the Closeness Centrality can give you information about how the player is connected to the other players in the network. </p> <h4>Betweenness Centrality</h4> <p align="justify"> The Betweenness Centrality is a metric that measures the number of times a node acts as a bridge along the shortest path between two other nodes. Bringing it to our context can give you information about how the player connects to the other players in the network. </p> <p align="justify"> It is like the role that Busquets had in the Barcelona team. He was the player that connected the defense to the attack. He was the bridge between the two sectors of the team. </p> <p align="justify"> Short, Betweeness shows how the player is in the middle of the plays, connecting the other players. </p> <h4>Hubs and Authorities</h4> <p align="justify"> Hubs and Authorities are much exciting metrics for understanding the role of the players in the network. The Hubs are the players that make a lot of passes, and the Authorities are the players that receive a lot of passes. The concepts are simple, but the insights you can get from them can be unique. </p> <p align="justify"> Hubs are the players that are the source of the plays. In other words, they are the ones who create the plays and make passes. </p> <p align="justify"> Authorities are the players that are the target of the plays. They are the ones receiving the passes and probably finishing the plays. </p> <p align="justify"> You can combine those two metrics and compare them with the team's performance. What does it mean if you have a defender as a hub? What does it mean if you have a forward as an authority? The insights can be amazing. </p> <p align="justify"> An intuitive example is: back in the golden days of Barcelona, Messi was absolutely an authority in the Barcelona team meanwhile Xavi was a hub. Messi receives a lot of passes and finishes the plays, and Xavi is the source of the plays. </p> <h4>Pagerank</h4> <p align="justify"> Pagerank is an impressive algorithm created by Larry Page and Sergey Brin, the founders of Google. The algorithm was developed to rank web pages in the search engine. The algorithm is based on the idea that the importance of a web page can be measured by the number of pages that link to it. The more important the pages that link to a page, the more important the page is. </p> <p align="justify"> Bringing it to the football context, you can use the algorithm to rank the players in the network. Intuitively, the players showing a higher Pagerank are the most important players in the network. It can give you information that could be clearer just by looking at the passes network. </p> <p align="justify"> To sum things up, the Pagerank can give you information about the importance of the players in the network. </p> ## Conclusion <p align="justify"> In this post, we showed how to use Complex Networks to analyze football matches. We showed the steps to model the network and the metrics you can use to analyze the network. The metrics can give you information about the players' involvement in the match, the team's strategy, and the players' importance in the network. The analysis can give you insights that could be clearer just by looking at the match. In a future post, we will show how to analyze a football match using Complex Networks. </p> <p align="justify"> We hope you enjoyed the post. If you have any questions or comments, please leave them below. We will be happy to answer them. Keep following us to learn more about football and Complex Networks. </p> </p></p>]]></content><author><name>Balthazar Paixão</name></author><category term="Football;"/><category term="Complex_Networks"/><category term="Football;"/><category term="Complex_Networks;"/><summary type="html"><![CDATA[Using Complex Networks to analyze and understand football matches.]]></summary></entry><entry><title type="html">Analyzing Complex Network metrics from the 1958 World Cup final</title><link href="https://ac3lab.github.io/blog/2024/post_58_worldcup_final/" rel="alternate" type="text/html" title="Analyzing Complex Network metrics from the 1958 World Cup final"/><published>2024-01-17T16:00:00+00:00</published><updated>2024-01-17T16:00:00+00:00</updated><id>https://ac3lab.github.io/blog/2024/post_58_worldcup_final</id><content type="html" xml:base="https://ac3lab.github.io/blog/2024/post_58_worldcup_final/"><![CDATA[<figure> <picture> <img src="/assets/img/Posts_Images/2024-01-17-post_58_worldcup_final-Images/pele1958.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p align="justify"> The World Cup is the most important football competition in the world. It is held every four years and gathers the best national teams in the world. The first edition of the competition was held in 1930, in Uruguay, and since then, the competition has been held every four years, except in 1942 and 1946, due to World War II. The competition is organized by FIFA (Fédération Internationale de Football Association), the world's football governing body. </p> <p align="justify"> The 1958 World Cup was the sixth edition of the competition and was held in Sweden. The competition was attended by 16 teams, which were divided into four groups of four teams each. The first two teams in each group advanced to the quarterfinals. The competition was won by Brazil, which beat Sweden 5-2 in the final. The Brazilian team was led by the legendary Pelé, who was only 17 years old at the time. </p> <p align="justify"> This post aims to analyze the 1958 World Cup final passes networks between the Brazilian players. The data used in this post was obtained from the <a href="https://github.com/statsbomb/open-data" target="_blank">StatsBomb Open Data</a> repository. We will explore some Complex Network metrics to investigate the Brazilian team's passing network in the final match. Let's code! </p> <p>Data extraction</p> <p align="justify"> The data extraction process can be considered the easiest one. It is because Statsbomb provides a Python package called <a href="https://github.com/statsbomb/statsbombpy" target="_blank">statsbombpy</a> that allows us to extract the data directly from the repository based on the match_id that they provide in the repository. The extraction would be as follows: </p> <figure> <picture> <img src="/assets/img/Posts_Images/2024-01-17-post_58_worldcup_final-Images/data-extration-statsbombpy.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>Data preparation (to the passes network)</p> <p align="justify"> With the DataFrame from avents loaded, we can begin creating a class for the players and a function to get all the Starting XI players from the match (the ones that we will use in the passes network). The class for the players is as follows: </p> <figure> <picture> <img src="/assets/img/Posts_Images/2024-01-17-post_58_worldcup_final-Images/data-preparation-player-class.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p align="justify"> Using our DataFrame we want to filter the data following some criteria, so: <ol> <li>The event must be a pass</li> <li>It cannot be a pass from set-pieces</li> <li>And it must have an outcome of success</li> </ol> </p> <p align="justify"> After this filtering, we aggregate the data by the player that made the pass and the player that received the pass. And that's it, we have our passes network. </p> <p>Analysis</p> <p align="justify"> Now that we have our passes network, we can start the analysis. The first thing we can do is to plot the network. We can do this using the <a href="https://networkx.org/" target="_blank">NetworkX</a> package. The result will be like this: </p> <figure> <picture> <img src="/assets/img/Posts_Images/2024-01-17-post_58_worldcup_final-Images/data-analysis-pass-network-simple.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p align="justify"> Yeah... It's not very informative. We can see that Pelé is the player who receives the most passes, but we can't extract much information from this plot. So, let's try to improve it... </p> <figure> <picture> <img src="/assets/img/Posts_Images/2024-01-17-post_58_worldcup_final-Images/data-analysis-pass-network.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p align="justify"> Much better! Now we can see that Pelé and Vavá are occupying almost the same average position in the field. We can also see some differences compared with modern football. For example, there is no player with an average position in the center of the field. </p> <p>Complex Network metrics</p> <p align="justify"> As could be noted, we explore the creation of a pass network where our graph is a DiGraph, i.e., a directed graph. This is because we are interested in the direction of the passes. Given that, we can explore some Complex Network metrics to investigate the Brazilian team's passing network in the final match and their behavior. </p> <p>Degrees</p> <p align="justify"> The degree of a node is the number of edges incident to the node, the passes between the players. The player that showed the lowest degree was, unexpectedly, Bellini; and the player that showed the highest degree was Waldir. This could indicate how Brazil was exploiting spaces on the right side of the field. The average degree was 14.2. One interesting thing is that Pelé is not the player that received the most passes, the player is Garrincha. </p> <p>Clustering Coefficient</p> <p align="justify"> Clustering indicates how close a node and its neighbors are to being a clique. In our case, it indicates how close a player and his teammates are to being a clique (a group of players that pass the ball between them). The player that showed the highest clustering coefficient was Pelé. This could indicate that Pelé was the player that was more involved in the passing game. The lowest clustering coefficient was shown by Gylmar, the goalkeeper, which is expected. </p> <p>Closeness Centrality</p> <p align="justify"> Closeness centrality indicates how close a node is to all other nodes in the network. In our case, it indicates how close a player is to all other players in the network. The player that showed the highest closeness centrality was Garrincha, one of the most important players regarding dribbling and creating chances. The lowest closeness centrality was shown by Bellini, as the game was not being explored on his side of the field based on our theory. </p> <p>Betweenness Centrality</p> <p align="justify"> Betweenness centrality indicates how often a node appears on a shortest path between two other nodes. In our case, it indicates how often a player appears on a shortest path between two other players. The player that showed the highest betweenness centrality was Waldir, while the lowest betweenness centrality was shown by Bellini, which indicates that our beliefs are correct. </p> <p>Hubs and Authorities</p> <p align="justify"> Hubs and Authorities are two metrics that are used to identify how the degrees are distributed between the nodes in a network. The Hubs metric identifies the nodes that passed the ball the most, while the Authorities metric identifies the nodes that received the ball the most. The player that showed the highest Hubs metric was Waldir, and the player that showed the highest Authorities metric was Pelé. This indicates that Waldir was the player who passed the ball the most, while Pelé was the player who received the ball the most. </p> <p>Pagerank</p> <p align="justify"> Pagerank is a metric that is used to identify the nodes that are more important in a network. The player that showed the highest Pagerank was Pelé, and the player that showed the lowest Pagerank was Bellini. This indicates that Pelé was the player that was more important in the network, while Bellini was the player that was less important in the network. </p> <p>Conclusion</p> <p align="justify"> In this post, we analyzed the 1958 World Cup final passes network between the Brazilian players. We explored some Complex Network metrics to investigate the Brazilian team's passing network in the final match and their behavior. We found that Pelé, Garrincha and Waldir showed a great importance in the network, while Bellini and Gylmar showed a low importance in the network. We also found that Brazil was exploiting spaces on the right side of the field. </p> <p align="justify"> I hope you enjoyed this post and could learn a little bit more about complex networks. If you have any questions or suggestions, please leave a comment below. The complete analysis code can be found on the <a href="https://github.com/balthapaixao/football-networks/blob/main/analysis/others/public/complex-network-analysis-1958-brazil.ipynb ">notebook</a>. </p>]]></content><author><name>Balthazar Paixão</name></author><category term="Football;"/><category term="Python"/><category term="Football;"/><category term="World_Cup;"/><category term="Python"/><summary type="html"><![CDATA[Investigating the 1958 World Cup final match between Brazil and Sweden using Complex Network metrics.]]></summary></entry><entry><title type="html">Running — Part 1: Extracting my Nike Run Club data and exploring in python to evaluate my performance</title><link href="https://ac3lab.github.io/blog/2024/post_running/" rel="alternate" type="text/html" title="Running — Part 1: Extracting my Nike Run Club data and exploring in python to evaluate my performance"/><published>2024-01-06T11:12:00+00:00</published><updated>2024-01-06T11:12:00+00:00</updated><id>https://ac3lab.github.io/blog/2024/post_running</id><content type="html" xml:base="https://ac3lab.github.io/blog/2024/post_running/"><![CDATA[<figure> <picture> <img src="/assets/img/Posts_Images/2024-01-06-post_running-Images/1.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p align="justify"> Anyone who knows me knows that I love sport. Since I was a kid, I always was influenced to practice something and never went long without it. Some sports I've played: swimming, futsal, handball (I still play) and now running, my most recent addiction. </p> <p align="justify"> A few months ago, running has become part of my routine. Every week I try to run 2 or 3 times, and always outdoors (I hate treadmills with all my might). To measure my performance, I have been running with the Nike Run Club (NRC) app and recording my runs on it. Looking my data in the app, I felt the need to do more, some analysis of my performance. And is here that another passion comes into to play: data science. </p> <p align="justify"> Anyone who also knows me knows that I am a data scientist and rarely believe in anything or make any decision without evidence. It's a bit of cliche, but analyzing everything is also part of my routine, and so, why not bring the data to my side, and like this, who knows, it can help me make decisions that get better my results? This is what I want to start to test. Let's code! </p> <p>Data extraction</p> <p align="justify"> Firstly, I needed the data from my runs. Doing a quick research, I realized that Nike didn't officially instrument to data export, and for get it would be necessary to take alternative paths. </p> <p align="justify"> I used a program called nrc-exporter (created by some curious programmer), and it exports data to a local directory easily and quickly. As a first step, we need to install the program in the terminal using pip install nrc-exporter. The annoying part is that we need to provide the program with authentication tokens that Nike generates when you do a login, what is simple but so manual. </p> <p align="justify"> 1) Go to the Nike website and do a login normally;<br/> 2) Open Developer tools &gt; Application. Then just copy the token like this image: </p> <figure> <picture> <img src="/assets/img/Posts_Images/2024-01-06-post_running-Images/2.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p align="justify"> Now, back in the terminal, just run nrc-exporter with the token, like this: </p> <p>nrc-exporter -t token</p> <p>You will see this execution:</p> <figure> <picture> <img src="/assets/img/Posts_Images/2024-01-06-post_running-Images/3.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p align="justify"> It's ready! All data will be downloaded to a folder called activities and will be inside the folder where you run the script. The file's format will be .json. </p> <p align="justify"> If this process doesn't work, there are other ways. I'll leave the link <a href="https://pypi.org/project/nrc-exporter/">here</a> if you want to know more about nrc-exporter. </p> <p>Exploratory</p> <p align="justify"> I loaded the files in a jupyter notebook to do the analysis. As all files are .json format, using the pandas json_normalize() function helps a lot. </p> <p align="justify"> After the preprocessing, creating, selecting and transforming the variables — as the average pace, for example, which comes in total minutes and not in minutes'seconds' how we normally use —, I wanted to analyze, my final dataframe looked like this: </p> <figure> <picture> <img src="/assets/img/Posts_Images/2024-01-06-post_running-Images/4.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>To contextualize, some descriptive statistics:</p> <figure> <picture> <img src="/assets/img/Posts_Images/2024-01-06-post_running-Images/5.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p align="justify"> I analyzed a sample of races in the period of 137 days (a little over 4 months). During this period, I ran 31 races totaling 180km! I also calculated the interval average in days between one race and another. Excluding the period that I was unable to run (20 days), that I understood as an outlier that shouldn't be taken in consideration, this interval was 4 days. </p> <p align="justify"> Considering these 31 races, the average distance was 5.81km and my average pace was 6'24'' per km. Additionally, with these runs, I burned a total of 9981 calories! </p> <p>Let’s to the graphical analyses:</p> <figure> <picture> <img src="/assets/img/Posts_Images/2024-01-06-post_running-Images/6.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p align="justify"> The graph above illustrates the evolution of my average pace throughout the runs and the overall average. We can observe that in my recent runs, my pace has been above this average. </p> <p align="justify"> As I mentioned above, I created a variable called "days without running" to try to understand if my pace increased with many days without running. The peaks on the gray line follow the peaks on the purple line in the graph below, confirming what I already suspected: an extended period without exercise may be one of the variables affecting my time. </p> <figure> <picture> <img src="/assets/img/Posts_Images/2024-01-06-post_running-Images/7.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p align="justify"> Something a little obvious, but it's also cool to visualize: the opposite trajectory of the average pace and average speed. </p> <figure> <picture> <img src="/assets/img/Posts_Images/2024-01-06-post_running-Images/8.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>Let’s follow:</p> <figure> <picture> <img src="/assets/img/Posts_Images/2024-01-06-post_running-Images/9.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p align="justify"> The graph above shows the progression of distances in my runs. The majority of my runs are in the range of 5km, and when I run more than that, I run the double. This is what pushes the average up. </p> <p>When crossing the average pace data with the distance, we have:</p> <figure> <picture> <img src="/assets/img/Posts_Images/2024-01-06-post_running-Images/10.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p align="justify"> The distribution of my pace in the 5km runs is varied, which doesn't surprise me. Another thing I confirmed looking the image above was the increase in my pace as I increase the distance. There's another aspect that I need to work on. </p> <p>To analyze calories, I plotted two graphs:</p> <figure> <picture> <img src="/assets/img/Posts_Images/2024-01-06-post_running-Images/11.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure> <picture> <img src="/assets/img/Posts_Images/2024-01-06-post_running-Images//12.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p align="justify"> The first one makes clear the positive correlation between calories and distance, meaning if you want to burn more calories, run more (remembering that correlation doesn't imply causality, but in this case, I know it does). The second one doesn't show a correlation between calories and speed. Note that many times I burned almost the same amount of calories, running at different average speeds (probably during the many 5km runs). </p> <p align="justify"> Another feeling I had was that on cloudy days, my performance was a bit better. No sun, and a little breeze, you know how it is... But that's not what the data showed me. The boxplot below suggests that on "clear days," the distribution of my speed is the "best": </p> <figure> <picture> <img src="/assets/img/Posts_Images/2024-01-06-post_running-Images/13.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>Finally, the distribution of elevation and descent on my routes:</p> <figure> <picture> <img src="/assets/img/Posts_Images/2024-01-06-post_running-Images/14.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>Relevant insights</p> <p align="justify"> 1) Always run to try to keep/lower my pace for distances that I'm already used to running and consequently be able to improve for longer distances;<br/> 2) I need to run longer distances, even with a bad time, if I want to lose more calories;<br/> 3) The weather, apparently, doesn't have impact on my performance;<br/> 4) Apparently elevation gain doesn't have great correlations with running time and calories. Therefore, I can keep my usual routes if I wanted to change some of these variables. </p> <p>Some observations for who want to replicate the analysis:</p> <p align="justify"> 1) It's possible to find the latitude and longitude of the routes in the data, making it possible to georeference the races. In my case I didn't think it was relevant to use, since I almost always run in the same place.<br/> 2) As wrote above, the average pace data comes in total minutes, so if like me, you want to look at this more friendly and usual — minutes'seconds'' — it is necessary to treat this variable.<br/> 3) Also as wrote above, I didn't find the time information per section, so I preferred not to use it. </p> <p align="justify"> There are a lot of people entering/wanting to enter the data analytics/data science area and who need data to train programming or even to build their portfólios. The message I would also share with this post is that there is nothing cooler than using our data for this. In addition to using them for our benefit, generating insights that help us make better decisions (for running in my case), we address topics as treatment and transformation of variables, outliers, data quality and others, clarifying how all of this works in the real life. </p> <p align="justify"> Any suggestions are welcome! The complete analysis code can be found on my <a href="https://github.com/nathaliatito">github</a>. </p>]]></content><author><name>Nathália Tito</name></author><category term="Running;"/><category term="Python"/><category term="Running;"/><category term="Python"/><summary type="html"><![CDATA[How I used data science methods to evaluate my running performance]]></summary></entry></feed>